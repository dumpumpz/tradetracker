name: Update Analysis Data Files

on:
  # Runs on a schedule (this is set to run at the top of every hour)
  schedule:
    - cron: "0 * * * *"

  # Allows you to run this workflow manually from the Actions tab on GitHub
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest

    # IMPORTANT: Grant permissions for the GITHUB_TOKEN to be able to push to the repository.
    permissions:
      contents: write # This is the key change to allow committing

    steps:
      # 1. Checks out your repository under $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Sets up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Installs dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 4. Runs your Python scripts to generate the JSON files
      - name: Run Python scripts to generate JSON
        run: |
          python sr_levels_analysis.py
          python ma_analysis.py

      # 5. BEST PRACTICE: Use a dedicated action to commit and push changes
      # This action automatically handles checking for changes, configuring git,
      # committing, and pushing.
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # The message for the commit
          commit_message: "Automated analysis data update"
          
          # The files to add. You can use wildcards.
          # This pattern tells it to only look for these two specific files.
          file_pattern: sr_levels_analysis.json ma_analysis.json
          
          # Optional: The branch to push to. Defaults to the current branch.
          # branch: main
